basePath: /
definitions:
  models.CapsuleResponse:
    properties:
      created_at:
        description: Date and time when the capsule was created
        type: string
      files_folder_uuid:
        description: Optional folder UUID for files
        type: string
      id:
        description: Capsule ID
        type: integer
      message:
        description: Message text
        type: string
      recipient_email:
        description: Recipient's email address
        type: string
      send_at:
        description: Date and time when the capsule is scheduled to be sent
        type: string
      sender_name:
        description: Sender's name
        type: string
      status:
        description: Status of the capsule (e.g., pending, sent)
        type: string
    type: object
  models.CreateCapsuleRequest:
    properties:
      files_folder_uuid:
        description: Optional folder UUID for files
        example: 07023417-5079-429d-a113-cbef2ef164d7
        type: string
      message:
        description: Message text to be sent
        example: Test Message
        maxLength: 4096
        type: string
      recipient_email:
        description: Recipient's email address
        example: test@example.com
        type: string
      send_at:
        description: Send date in string format
        example: "2024-11-18"
        type: string
      sender_name:
        description: Sender's name
        example: John Doe
        type: string
    required:
    - message
    - recipient_email
    - send_at
    - sender_name
    type: object
  models.CreateFeedbackRequest:
    properties:
      message:
        description: The feedback message (up to 4096 characters)
        example: Test Message
        maxLength: 4096
        type: string
    required:
    - message
    type: object
  models.EmailDataRequest:
    properties:
      body:
        description: Body content of the email with a maximum character limit
        example: Test body
        maxLength: 4096
        type: string
      files_folder_uuid:
        description: Optional UUID for the folder containing attachments
        example: 07023417-5079-429d-a113-cbef2ef164d7
        type: string
      recipient_email:
        description: Recipient's email address
        example: test@example.com
        type: string
      subject:
        description: Subject of the email
        example: Test subject
        type: string
    required:
    - body
    - recipient_email
    - subject
    type: object
  models.ErrorResponse:
    properties:
      error:
        description: A brief description of the error
        type: string
    type: object
  models.FeedbackResponse:
    properties:
      created_at:
        description: The date and time when the feedback was created
        type: string
      id:
        description: The unique identifier for the feedback
        type: integer
      message:
        description: The feedback message content
        type: string
    type: object
  models.PresignedURLResponse:
    properties:
      presigned_url:
        description: The generated presigned URL for file upload
        type: string
    type: object
host: backend.localhost
info:
  contact:
    name: API Support
    url: http://www.example.com/support
  description: REST API backend for the Time Capsule Memories project.
  license:
    name: MIT
  title: Time Capsule Memories API
  version: "1.0"
paths:
  /capsules:
    post:
      consumes:
      - application/json
      description: Creates a new time capsule with the given parameters
      parameters:
      - description: Capsule creation payload
        in: body
        name: capsule
        required: true
        schema:
          $ref: '#/definitions/models.CreateCapsuleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Capsule created successfully
          schema:
            $ref: '#/definitions/models.CapsuleResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to create capsule
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new capsule
      tags:
      - capsules
  /feedback:
    post:
      consumes:
      - application/json
      description: Stores user feedback in the database
      parameters:
      - description: Feedback data
        in: body
        name: feedback
        required: true
        schema:
          $ref: '#/definitions/models.CreateFeedbackRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Feedback successfully created
          schema:
            $ref: '#/definitions/models.FeedbackResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Submit user feedback
      tags:
      - feedback
  /generate-presigned-url:
    get:
      consumes:
      - application/json
      description: Generates a presigned URL for uploading a file to a specific directory
        (UUID) in MinIO.
      parameters:
      - description: Target directory UUID
        in: query
        name: directory
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Presigned URL generated successfully
          schema:
            $ref: '#/definitions/models.PresignedURLResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to generate presigned URL
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Generate a presigned URL for file upload
      tags:
      - file
  /send-test-email:
    post:
      consumes:
      - application/json
      description: Generates and sends a test email
      parameters:
      - description: Email payload
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/models.EmailDataRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Email sent successfully
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to send email
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Send a test email
      tags:
      - email
swagger: "2.0"
